const JSEvents = require("jsevents");
const blockly = require("blockly");


/**
 * Create a workspace
 */
class Workspace {

    /**
     * Create a workspace
     * 
     * @param {ProjectFile} file 
     */
    constructor(file) {
        this.file = file;
        this.events = new JSEvents(this);

    }

    open(xml_text) {
        const that = this;

        const options = {
            toolbox: document.getElementById('toolbox'),
            zoom: {
                controls: true,
                wheel: true,
                startScale: 1.0,
                maxScale: 3,
                minScale: 0.3,
                scaleSpeed: 1.1
            },
            trashcan: true
        };
        let workspace = Blockly.inject(blockly.getDiv(), options);

        if (xml_text) {
            const xml = Blockly.Xml.textToDom(xml_text);
            Blockly.Xml.domToWorkspace(xml, workspace);
        }
        this.workspace = workspace;

        // run when a change was made in blockly
        workspace.addChangeListener(function () {
            var xml = Blockly.Xml.workspaceToDom(workspace);
            var xml_text = Blockly.Xml.domToText(xml);

            that.onChange(that.workspace, Blockly, xml_text);
        });
    }

    onChange() {
        this.events.triggerCallback("change", this, arguments);
    }

    close(){
        blockly.getDiv().innerHTML = "";
    }
}

module.exports = Workspace;