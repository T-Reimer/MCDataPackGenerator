
/**
 * get the list of local projects
 * 
 * @returns {Promise}
 */
async function getList () {
    let names = [];

    let pro = localStorage.getItem("projects");
    if (pro) {
        let list = JSON.parse(pro);

        for (let i = 0; i < list.length; i++) {
            let project = list[i];
            names.push(project.name);
        }
    }

    return names;
}
module.exports.list = getList;

/**
 * update the projects list on the upper left
 */
function updateVisualList(){
    let div = $("#project-list-dropdown");
    div.empty();

    getList().then(function(li){
        li.sort();
        for(let i = 0; i < li.length; i++){
            let name = li[i];

            let a = document.createElement("a");
            a.setAttribute("href", "#project_" + name);
            a.classList.add("dropdown-item");
            a.appendChild(document.createTextNode(name));
            div.append(a);
        }
    });
}
module.exports.updateVisualList = updateVisualList;

/**
 * load a file by name
 * 
 * @param {String} name the project name
 */
async function loadProject(name){
    let pro = localStorage.getItem("projects");
    if (pro) {
        let list = JSON.parse(pro);

        for (let i = 0; i < list.length; i++) {
            let project = list[i];
            if(project.name === name){
                return project;
            }
        }
    }

    throw new Error("Project Not Found");
}

module.exports.load = loadProject;

/**
 * Create a new project and save it
 * 
 * @param {Object} data the form data
 * 
 * @returns {Promise}
 */
module.exports.new = async function(data){
    let name = null;
    let file = {};
    for(let i = 0; i < data.length; i++){
        file[data[i].name] = data[i].value;
    }
    if(file.name){
        name = file.name;
    }
    if(name === null || name === ""){
        throw new Error("Data Pack name can't be blank.");
    }
    if(file.namespace === null || file.namespace === ""){
        throw new Error("Namespace can't be blank");
    }
    return file;
};

/**
 * load a project and open it
 * 
 * @param {String} name the project name
 */
module.exports.open = function(name){
    const ProjectFile = require("./file.js");

    let file = new ProjectFile(name);

    global.openFile = file;

    return file;
};

/**
 * save the file to localStorage
 * 
 * @param {Object} file the file object
 */
module.exports.save = async function(file){
    let pro = localStorage.getItem("projects");
    let list = [];
    let saved = false;

    if (pro) {
        list = JSON.parse(pro);
        

        for (let i = 0; i < list.length; i++) {
            let project = list[i];
            if(project.name === file.name){
                list[i] = file;
                saved = true;
            }
        }
    }
    if(!saved){
        list.push(file);
    }
    localStorage.setItem("projects", JSON.stringify(list));
    setTimeout(function(){
        updateVisualList();
    }, 1);
};