const JSEvents = require("jsevents");

class jsModal {

    constructor(heading, content, success, cancel) {
        this.success = typeof success === "string" ? success : "Submit";
        this.cancel = typeof cancel === "string" ? cancel : "Cancel";

        this.events = new JSEvents(this);

        this.modalContent = document.createChild("div");
        this.heading = heading;

        this.create();

        this.content = content;
    }

    /**
     * set the modal content
     */
    set content(content) {
        this.modalContent = content;
        // refresh the content in the modal
        let body = this.elements.body;
        body.innerHTML = "";
        body.appendChild(this.modalContent);
    }
    /**
     * get the modal content
     */
    get content() {
        return this.modalContent;
    }

    get successBtn() {
        return this.elements.successBtn;
    }

    get cancelBtn() {
        return this.elements.cancelBtn;
    }

    /**
     * create the modal
     */
    create() {
        const that = this;
        this.elements = {};

        // create the modal
        let dialog = document.createChild("div", {
            classList: ["modal", "hide", "fade", "in"],
            style: "display: none;",
            childNodes: [{
                type: "div",
                options: {
                    classList: ["modal-dialog"]
                }
            }]
        });
        this.dialog = dialog;

        let modal = dialog.firstChild.createChild("div", {
            classList: ["modal-content"]
        })
        this.modal = modal;

        // create the header
        let headDiv = modal.createChild("div")
        this.elements.heading = headDiv.createChild("div", {
            classList: ["modal-header"]
        });

        this.elements.header = this.elements.heading.createChild("h5", {
            text: this.heading,
            classList: ["modal-title"]
        });

        this.elements.heading.createChild("button", {
            type: "button",
            classList: ["close"],
            "data-dismiss": "modal",
            "aria-label": "Close",
            childNodes: [{
                type: "span",
                options: {
                    "aria-hidden": "true",
                    text: "Ã—"
                }
            }]
        });

        // create the body
        let body = modal.createChild("div", {
            classList: ["modal-body"]
        });
        this.elements.body = body;

        body.innerHTML = "";
        body.appendChild(this.modalContent);

        // create the footer
        let footer = modal.createChild("div", {
            classList: ["modal-footer"]
        });
        this.elements.footer = footer;

        let successBtn = footer.createChild("span", {
            classList: ["btn", "btn-success"],
            text: this.success,
            on: {
                click: function () {
                    console.log("Trigger Success function");
                    that.events.triggerCallback("success", that, []);
                }
            }
        });
        this.elements.successBtn = successBtn;

        let cancelBtn = footer.createChild("span", {
            classList: ["btn"],
            "data-dismiss": "modal",
            text: this.cancel,
            on: {
                click: function () {
                    that.events.triggerCallback("cancel", that, []);
                }
            }
        });
        this.elements.cancelBtn = cancelBtn;

        document.body.appendChild(dialog);

        this.show();
    }

    /**
     * show the dialog
     */
    show() {
        $(this.dialog).modal();
    }

    /**
     * hide the dialog
     */
    hide() {
        $(this.dialog).modal("hide");
    }

    /**
     * remove the modal element
     */
    destroy() {
        const that = this;

        if (this.dialog.style.display === "none") {
            $(this.dialog).remove();
        } else{
            this.hide();
            setTimeout(function(){
                that.destroy();
            }, 500);
        }
    }
}

module.exports = jsModal;