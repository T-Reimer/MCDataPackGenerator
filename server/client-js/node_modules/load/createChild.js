
Element.prototype.createChild = function(type, options){
    let el = document.createChild(type, options);
    this.appendChild(el);

    return el;
};

/**
 * Create a Element with given options
 * 
 * @param {String} type Element name
 * @param {Object} options options to apply to element
 * 
 * @returns {Element}
 */
document.createChild = function(type, options){
    options = typeof options === "object" ? options : {};
    if(!options){
        options = {};
    }

    let el = document.createElement(type);

    if(options.text){
        el.appendChild(document.createTextNode(options.text));
    }

    let skip = ["on", "text", "childNodes", "classList"];
    for(let o in options){
        if(skip.includes(o)){
            continue;
        }
        el.setAttribute(o, options[o]);
    }

    if(typeof options.classList === "object"){
        for(let i = 0; i < options.classList.length; i++){
            if(options.classList[i] === ""){
                continue;
            }
            el.classList.add(options.classList[i]);
        }
    }

    if(typeof options.on === "object"){
        for(let e in options.on){
            el.addEventListener(e, options.on[e]);
        }
    }

    if(typeof options.childNodes === "object"){
        for(let i = 0; i < options.childNodes.length; i++){
            el.createChild(options.childNodes[i].type, options.childNodes[i].options);
        }
    }

    return el;
};